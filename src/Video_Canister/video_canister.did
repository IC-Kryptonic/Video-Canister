type Chunk = blob;

type PutMetaInfo = record {
    "name": text;
    "description": text;
    "chunk_num": nat;
}

type MetaInfo = record {
    "name": text;
    "description": text;
    "chunk_num": nat;
    "version": nat;
    "owner": principal;
}

type PutMetaInfoResponse = variant {
    //success
    success;

    //Not the owner
    missing_rights;
}

type PutChunkResponse = variant {
    //success
    success;

    //outside array range
    out_of_bounds;
}

type CahngeOwnerResponse = variant {
    success;

    missing_rights;
}

service : (principal) -> {
    "put_meta_info": (PutMetaInfo) -> (PutMetaInfoResponse);
    "put_chunk": (nat, Chunk) -> (PutChunkResponse);
    "get_meta_info": () -> (MetaInfo) query;
    "get_chunk": (nat) -> (opt Chunk) query;

    "change_owner": (principal) -> (CahngeOwnerResponse);
}